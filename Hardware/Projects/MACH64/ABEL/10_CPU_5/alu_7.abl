module ALU_7 interface ([Op5..Op0], [A3..A0], [B3..B0] -> [R3..R0], ZF, CF)

declarations

	@include 'opcodes.abl'

	Op5..Op0 pin;

	A3..A0 pin;
	B3..B0 pin;
	R3..R0 pin;
	
	C3..C1 node;

	ZF	pin;
	CF	pin;

	opcode 	= [Op5..Op0];
	A	= [A3..A0];
	B	= [B3..B0];
	R	= [R3..R0];

equations

	when (opcode == OP_AND) then R = A & B;

	when (opcode == OP_OR ) then R = A # B;

	when (opcode == OP_XOR) then R = A $ B;

	when (opcode == OP_NOT) then R = !A;

	when (opcode == OP_INCA) then [CF,R3..R0] = [0,A3..A0] + 1;

	when (opcode == OP_INCB) then [CF,R3..R0] = [0,B3..B0] + 1;

	when (opcode == OP_DECA) then { R = A - 1; CF = (A == 0); }

	when (opcode == OP_DECB) then { R = B - 1; CF = (B == 0); }

	when (opcode == OP_SHL) then [CF,R3..R0] = [A3,A2,A1,A0,0];

	when (opcode == OP_SHR) then [R3,R2,R1,R0,CF] = [0,A3,A2,A1,A0];

	when (opcode == OP_ADD) then {

		R0 = A0 $ B0;
		C1 = A0 & B0;

		R1 = A1 $ B1 $ C1;
		C2 = A1 & B1 # (A1 $ B1) & C1;

		R2 = A2 $ B2 $ C2;
		C3 = A2 & B2 # (A2 $ B2) & C2;

		R3 = A3 $ B3 $ C3;
		CF = A3 & B3 # (A3 $ B3) & C3;
	}


	ZF = (R == 0);
	
end 
