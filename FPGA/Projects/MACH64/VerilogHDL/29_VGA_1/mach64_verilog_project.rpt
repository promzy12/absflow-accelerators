|--------------------------------------------------------------|
|- ispLEVER Classic 1.5.00.05.39.l1 Fitter Report File        -|
|- Copyright(C), 1992-2011, Lattice Semiconductor Corporation -|
|- All Rights Reserved.                                       -|
|--------------------------------------------------------------|




The Basic/Detailed Report Format can be selected in the dialog box
Tools->Fitter Report File Format...

Project_Summary
~~~~~~~~~~~~~~~
Project Name         :  mach64_verilog_project
Project Path         :  C:\Users\tmcphillips\Designs\Projects\MACH64\VerilogHDL\29_VGA_1
Project Fitted on    :  Fri Feb 24 17:13:51 2012

Device               :  M4064_32
Package              :  48
GLB Input Mux Size   :  10
Available Blocks     :  4
Speed                :  -7.5
Part Number          :  LC4064V-75T48I
Source Format        :  Pure_Verilog_HDL


// Project 'mach64_verilog_project' Fit Successfully! //


Compilation_Times
~~~~~~~~~~~~~~~~~
Prefit Time                     0 secs
Load Design Time                0.03 secs
Partition Time                  0.09 secs
Place Time                      0.00 secs
Route Time                      0.00 secs
Total Fit Time                  00:00:01


Design_Summary
~~~~~~~~~~~~~~
Total Input Pins                2
Total Logic Functions           45
  Total Output Pins             12
  Total Bidir I/O Pins          0
  Total Buried Nodes            33
Total Flip-Flops                28
  Total D Flip-Flops            19
  Total T Flip-Flops            9
  Total Latches                 0
Total Product Terms             225

Total Reserved Pins             0
Total Locked Pins               14
Total Locked Nodes              0

Total Unique Output Enables     0
Total Unique Clocks             1
Total Unique Clock Enables      2
Total Unique Resets             1
Total Unique Presets            1

Fmax Logic Levels               2


Device_Resource_Summary
~~~~~~~~~~~~~~~~~~~~~~~
                                 Device
                                 Total    Used   Not Used   Utilization
-----------------------------------------------------------------------
Dedicated Pins
  Clock/Input Pins                  4        1      3    -->    25
  I/O / Enable Pins                 2        0      2    -->     0
I/O Pins                           30       13     17    -->    43
Logic Functions                    64       45     19    -->    70
  Input Registers                  32        0     32    -->     0

GLB Inputs                        144      107     37    -->    74
Logical Product Terms             320      166    154    -->    51
Occupied GLBs                       4        4      0    -->   100
Macrocells                         64       45     19    -->    70

Control Product Terms:
  GLB Clock/Clock Enables           4        2      2    -->    50
  GLB Reset/Presets                 4        0      4    -->     0
  Macrocell Clocks                 64        0     64    -->     0
  Macrocell Clock Enables          64        1     63    -->     1
  Macrocell Enables                64        0     64    -->     0
  Macrocell Resets                 64        0     64    -->     0
  Macrocell Presets                64        0     64    -->     0

Global Routing Pool               100       38     62    -->    38
  GRP from IFB                     ..        1     ..    -->    ..
    (from input signals)           ..        1     ..    -->    ..
    (from output signals)          ..        0     ..    -->    ..
    (from bidir signals)           ..        0     ..    -->    ..
  GRP from MFB                     ..       37     ..    -->    ..
----------------------------------------------------------------------

<Note> 1 : The available PT is the product term that has not been used.
<Note> 2 : IFB is I/O feedback.
<Note> 3 : MFB is macrocell feedback.



GLB_Resource_Summary
~~~~~~~~~~~~~~~~~~~~
                                                                                     # of PT
               ---  Fanin  ---    I/O    Input  Macrocells       Macrocells   Logic  clusters
             Unique Shared Total  Pins    Regs Used Inaccessible  available    PTs   used
-------------------------------------------------------------------------------------------
Maximum
  GLB                      36      *(1)     8   --     --             16       80       16
-------------------------------------------------------------------------------------------
  GLB    A      2    22    24      0/8      0   10      1              5       42       12
  GLB    B      2    24    26      1/8      0   12      0              4       39       12
  GLB    C      2    29    31      8/8      0   11      0              5       44       12
  GLB    D      2    24    26      4/8      0   12      0              4       41       12
-------------------------------------------------------------------------------------------
TOTALS:         8    99   107     13/32     0   45      1             18      166       48

<Note> 1 : For ispMACH 4000 devices, the number of IOs depends on the GLB.
<Note> 2 : Four rightmost columns above reflect last status of the placement process.



GLB_Control_Summary
~~~~~~~~~~~~~~~~~~~
           Shared Shared | Mcell  Mcell  Mcell  Mcell  Mcell 
           Clk/CE Rst/Pr | Clock  CE     Enable Reset  Preset
------------------------------------------------------------------------------
Maximum
  GLB        1      1        16     16     16     16     16  
==============================================================================
  GLB    A   0      0         0      0      0      0      0
  GLB    B   0      0         0      0      0      0      0
  GLB    C   1      0         0      1      0      0      0
  GLB    D   1      0         0      0      0      0      0
------------------------------------------------------------------------------

<Note> 1 : For ispMACH 4000 devices, the number of output enables depends on the GLB.



Optimizer_and_Fitter_Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Pin Assignment :                       Yes
Group Assignment :                     No
Pin Reservation :                      No

@Ignore_Project_Constraints :
  Pin Assignments :                    No
      Keep Block Assignment            --
      Keep Segment Assignment          --
  Group Assignments :                  No
  Macrocell Assignment :               No
      Keep Block Assignment            --
      Keep Segment Assignment          --

@Backannotate_Project_Constraints
  Pin Assignments :                    No
  Pin And Block Assignments :          No
  Pin, Macrocell and Block :           No

@Timing_Constraints :                  No

@Global_Project_Optimization :
  Balanced Partitioning :              Yes
  Spread Placement :                   Yes

  Note :
    Pack Design :
       Balanced Partitioning = No
       Spread Placement      = No
    Spread Design :
       Balanced Partitioning = Yes
       Spread Placement      = Yes


@Logic_Synthesis :
  Logic Reduction :                    Yes
  Node Collapsing :                    FMAX
  Fmax_Logic_Level :                   1
  D/T Synthesis :                      Yes
  XOR Synthesis :                      Yes
  Max. P-Term for Collapsing :         16
  Max. P-Term for Splitting :          80
  Max Symbols :                        24

@Utilization_options
  Max. % of Macrocells used :          100
@Usercode                               (HEX)
@IO_Types                              Default = LVCMOS18 (2)
@Output_Slew_Rate                      Default = FAST (2)
@Power                                 Default = HIGH (2)
@Pull                                  Default = PULLUP_UP (2)
@Fast_Bypass                           Default = None (2)
@ORP_Bypass                            Default = None
@Input_Registers                       Default = None (2)
@Register_Powerup                      Default = None

Device Options:
<Note> 1 : Reserved unused I/Os can be independently driven to Low or High, and does not
           follow the drive level set for the Global Configure Unused I/O Option.
<Note> 2 : For user-specified constraints on individual signals, refer to the Output,
           Bidir and Buried Signal Lists.



Pinout_Listing
~~~~~~~~~~~~~~
      | Pin   | Bank |GLB |Assigned|                 | Signal|
Pin No| Type  |Number|Pad |Pin     |     I/O Type    | Type  | Signal name
-----------------------------------------------------------------------------------
1     | TDI   |   -  |    |        |                 |       |
2     |  I_O  |   0  |A10 |        |                 |       |
3     |  I_O  |   0  |A12 |        |                 |       |
4     |  I_O  |   0  |A14 |        |                 |       |
5     |GNDIO0 |   -  |    |        |                 |       |
6     |VCCIO0 |   -  |    |        |                 |       |
7     |  I_O  |   0  |B0  |        |                 |       |
8     |  I_O  |   0  |B2  |        |                 |       |
9     |  I_O  |   0  |B4  |        |                 |       |
10    |  I_O  |   0  |B6  |        |                 |       |
11    | TCK   |   -  |    |        |                 |       |
12    | VCC   |   -  |    |        |                 |       |
13    | GND   |   -  |    |        |                 |       |
14    |  I_O  |   0  |B8  |        |                 |       |
15    |  I_O  |   0  |B10 |        |                 |       |
16    |  I_O  |   0  |B12 |    *   |LVCMOS18         | Input |reset_n
17    |  I_O  |   0  |B14 |        |                 |       |
18    |INCLK1 |   0  |    |        |                 |       |
19    |INCLK2 |   1  |    |        |                 |       |
20    |  I_O  |   1  |C0  |    *   |LVCMOS18         | Output|vState_0_
21    |  I_O  |   1  |C2  |    *   |LVCMOS18         | Output|vState_1_
22    |  I_O  |   1  |C4  |    *   |LVCMOS18         | Output|hState_0_
23    |  I_O  |   1  |C6  |    *   |LVCMOS18         | Output|hState_1_
24    |  I_O  |   1  |C8  |    *   |LVCMOS18         | Output|vsync
25    | TMS   |   -  |    |        |                 |       |
26    |  I_O  |   1  |C10 |    *   |LVCMOS18         | Output|hsync
27    |  I_O  |   1  |C12 |    *   |LVCMOS18         | Output|blue_0_
28    |  I_O  |   1  |C14 |    *   |LVCMOS18         | Output|blue_1_
29    |GNDIO1 |   -  |    |        |                 |       |
30    |VCCIO1 |   -  |    |        |                 |       |
31    |  I_O  |   1  |D0  |    *   |LVCMOS18         | Output|green_0_
32    |  I_O  |   1  |D2  |    *   |LVCMOS18         | Output|green_1_
33    |  I_O  |   1  |D4  |    *   |LVCMOS18         | Output|red_0_
34    |  I_O  |   1  |D6  |    *   |LVCMOS18         | Output|red_1_
35    | TDO   |   -  |    |        |                 |       |
36    | VCC   |   -  |    |        |                 |       |
37    | GND   |   -  |    |        |                 |       |
38    |  I_O  |   1  |D8  |        |                 |       |
39    |  I_O  |   1  |D10 |        |                 |       |
40    |  I_O  |   1  |D12 |        |                 |       |
41    | I_O/OE|   1  |D14 |        |                 |       |
42    |INCLK3 |   1  |    |        |                 |       |
43    |INCLK0 |   0  |    |    *   |LVCMOS18         | Input |vgaClock
44    | I_O/OE|   0  |A0  |        |                 |       |
45    |  I_O  |   0  |A2  |        |                 |       |
46    |  I_O  |   0  |A4  |        |                 |       |
47    |  I_O  |   0  |A6  |        |                 |       |
48    |  I_O  |   0  |A8  |        |                 |       |
-----------------------------------------------------------------------------------

<Note> GLB Pad : This notation refers to the GLB I/O pad number in the device.
<Note> Assigned Pin : user or dedicated input assignment (E.g. Clock pins).
<Note> Pin Type : 
          ClkIn : Dedicated input or clock pin 
           CLK  : Dedicated clock pin
           I_O  : Input/Output pin
           INP  : Dedicated input pin
           JTAG : JTAG Control and test pin
           NC   : No connected



Input_Signal_List
~~~~~~~~~~~~~~~~~
                Input
         Pin    Fanout
 Pin GLB Type           Pullup Signal
---------------------------------------
  16   B  I/O   4 ABCD      Up reset_n
  43  -- INCLK    ----      Up vgaClock
---------------------------------------



Output_Signal_List
~~~~~~~~~~~~~~~~~~
          I         C      P R P       O Output
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P         Slew Pullup Signal
----------------------------------------------------------------------
  27   C  5  1   2  1 DFF    * R *         ----  Fast     Up blue_0_
  28   C  0  -   0  1 COM                  ----  Fast     Up blue_1_
  31   D  0  -   0  1 COM                  ----  Fast     Up green_0_
  32   D  0  -   0  1 COM                  ----  Fast     Up green_1_
  22   C 22  2   9  2 TFF    * R *       2 --CD  Fast     Up hState_0_
  23   C 17  2   8  2 DFF    * R *       2 --CD  Fast     Up hState_1_
  26   C  5  1   1  1 DFF  *   S           ----  Fast     Up hsync
  33   D  5  1   1  1 DFF    * R *         ----  Fast     Up red_0_
  34   D  0  -   0  1 COM                  ----  Fast     Up red_1_
  20   C 24  2  12  3 DFF    * R         4 ABCD  Fast     Up vState_0_
  21   C 13  2   5  1 DFF    * R         3 A-CD  Fast     Up vState_1_
  24   C  3  1   1  1 DFF  *   S           ----  Fast     Up vsync
----------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Bidir_Signal_List
~~~~~~~~~~~~~~~~~
          I         C      P R P       O Bidir
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P         Slew Pullup Signal
-------------------------------------------------------------------
-------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Buried_Signal_List
~~~~~~~~~~~~~~~~~~
        I         C      P R P       Node
        N         L Mc   R E U C I F Fanout
Mc GLB  P LL PTs  S Type E S P E R P         Signal
-----------------------------------------------------------------
10   D  5  -   2  1 COM              1 --C-  G_208
 8   A  7  -   2  1 COM              1 --C-  G_212
 8   B  8  -   2  1 COM              1 --C-  G_214
12   B  4  -   1  1 COM              1 --C-  N_26_i
 0   B 10  -   5  1 COM              1 --C-  N_32_i
12   A  5  -   1  1 COM              1 -B--  N_374
 3   D 22  -   9  2 COM              1 --C-  N_37_7_0
 1   B 21  -   8  2 COM              1 --C-  N_38_i
 7   A 20  -   4  1 COM              1 --C-  N_91_i
 9   D  8  -   3  1 COM              2 -BC-  line11
 6   A 11  2   4  1 DFF    * R       4 ABCD  line_0_
 6   B  5  2   3  1 DFF    * R       4 ABCD  line_1_
 4   B  6  2   4  1 DFF    * R       4 ABCD  line_2_
 5   D 12  2   5  1 DFF    * R       4 ABCD  line_3_
 9   A  8  2   2  1 TFF    * R       3 AB-D  line_4_
 1   D 20  -  12  3 COM              2 -BC-  line_4_9__un1_n
 3   B 11  2   5  1 DFF    * R       3 AB-D  line_5_
 5   B  6  2   4  1 DFF    * R       3 AB-D  line_6_
10   A 11  2   2  1 TFF    * R       3 AB-D  line_7_
 9   B 12  2   2  1 TFF    * R       3 AB-D  line_8_
10   B  4  2   2  1 DFF    * R       3 AB-D  line_9_
 7   D 10  -   4  1 COM              4 ABCD  pixel14_i_0_i
 2   B  2  1   1  1 DFF    * R       4 ABCD  pixel_0_
 5   C  3  1   2  1 DFF    * R       4 ABCD  pixel_1_
 8   D  4  1   3  1 DFF    * R       4 ABCD  pixel_2_
 5   A  5  1   4  1 DFF    * R       4 ABCD  pixel_3_
 7   B  6  1   2  1 DFF    * R       4 ABCD  pixel_4_
 7   C  8  2   2  1 TFF    * R       4 ABCD  pixel_5_
 2   A  7  1   1  1 TFF    * R       4 ABCD  pixel_6_
 3   A  8  1   1  1 TFF    * R       4 ABCD  pixel_7_
 9   C 11  2   2  1 TFF    * R       4 ABCD  pixel_8_
12   D 12  2   2  1 TFF    * R       4 ABCD  pixel_9_
 4   A 22  -  21  5 COM              1 --C-  vstate_1_ns_0_1_0__n
-----------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        IR = Input register
        FP = Fast path used
       OBP = ORP bypass used



PostFit_Equations
~~~~~~~~~~~~~~~~~
G_208.X1 = pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q ; (1 pterm, 4 signals)
G_208.X2 = pixel_4_.Q ; (1 pterm, 1 signal)

G_212.X1 = pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_5_.Q ; (1 pterm, 6 signals)
G_212.X2 = pixel_6_.Q ; (1 pterm, 1 signal)

G_214.X1 = pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_5_.Q & pixel_6_.Q ; (1 pterm, 7 signals)
G_214.X2 = pixel_7_.Q ; (1 pterm, 1 signal)

N_26_i = !pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q ; (1 pterm, 4 signals)

N_32_i.X1 = pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & !pixel_5_.Q & !pixel_8_.Q & !pixel_9_.Q
    # pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & !pixel_6_.Q & !pixel_8_.Q & !pixel_9_.Q
    # pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & !pixel_7_.Q & !pixel_8_.Q & !pixel_9_.Q
    # pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_5_.Q & pixel_6_.Q & pixel_7_.Q & pixel_8_.Q & pixel_9_.Q ; (4 pterms, 10 signals)
N_32_i.X2 = !pixel_5_.Q & !pixel_8_.Q & !pixel_9_.Q ; (1 pterm, 3 signals)

N_374 = line_0_.Q & line_1_.Q & line_2_.Q & line_3_.Q & line_4_.Q ; (1 pterm, 5 signals)

N_37_7_0.X1 = hState_1_.Q & hState_0_.Q & pixel_7_.Q & pixel_8_.Q & pixel_9_.Q
       & line_0_.Q & !line_1_.Q & !line_2_.Q & !line_3_.Q & !line_4_.Q
       & !line_5_.Q & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q
    # hState_1_.Q & hState_0_.Q & pixel_6_.Q & pixel_8_.Q & pixel_9_.Q
       & line_0_.Q & !line_1_.Q & !line_2_.Q & !line_3_.Q & !line_4_.Q
       & !line_5_.Q & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q
    # hState_1_.Q & hState_0_.Q & pixel_5_.Q & pixel_8_.Q & pixel_9_.Q
       & line_0_.Q & !line_1_.Q & !line_2_.Q & !line_3_.Q & !line_4_.Q
       & !line_5_.Q & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q
    # hState_1_.Q & hState_0_.Q & pixel_0_.Q & pixel_1_.Q & pixel_2_.Q
       & pixel_3_.Q & pixel_4_.Q & pixel_8_.Q & pixel_9_.Q & line_0_.Q
       & !line_1_.Q & !line_2_.Q & !line_3_.Q & !line_4_.Q & !line_5_.Q
       & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q
    # hState_1_.Q & hState_0_.Q & pixel_0_.Q & pixel_1_.Q & pixel_2_.Q
       & pixel_3_.Q & pixel_4_.Q & !pixel_5_.Q & !pixel_6_.Q & !pixel_7_.Q
       & pixel_8_.Q & pixel_9_.Q & line_0_.Q & line_1_.Q & !line_2_.Q
       & !line_3_.Q & !line_4_.Q & !line_5_.Q & !line_6_.Q & !line_7_.Q
       & !line_8_.Q & line_9_.Q
    # hState_1_.Q & hState_0_.Q & !pixel_8_.Q & !line_0_.Q & line_1_.Q
       & !line_2_.Q & !line_3_.Q & !line_4_.Q & !line_5_.Q & !line_6_.Q
       & !line_7_.Q & !line_8_.Q & line_9_.Q
    # hState_1_.Q & hState_0_.Q & !pixel_9_.Q & !line_0_.Q & line_1_.Q
       & !line_2_.Q & !line_3_.Q & !line_4_.Q & !line_5_.Q & !line_6_.Q
       & !line_7_.Q & !line_8_.Q & line_9_.Q
    # hState_1_.Q & hState_0_.Q & !pixel_5_.Q & !pixel_6_.Q & !pixel_7_.Q
       & !line_0_.Q & line_1_.Q & !line_2_.Q & !line_3_.Q & !line_4_.Q
       & !line_5_.Q & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q ; (8 pterms, 22 signals)
N_37_7_0.X2 = hState_1_.Q & hState_0_.Q & pixel_0_.Q & pixel_1_.Q & pixel_2_.Q
       & pixel_3_.Q & pixel_4_.Q & !pixel_5_.Q & !pixel_6_.Q & !pixel_7_.Q
       & pixel_8_.Q & pixel_9_.Q & line_1_.Q & !line_2_.Q & !line_3_.Q
       & !line_4_.Q & !line_5_.Q & !line_6_.Q & !line_7_.Q & !line_8_.Q
       & line_9_.Q ; (1 pterm, 21 signals)

N_38_i.X1 = !pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_5_.Q
    # !pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_6_.Q
    # !pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_7_.Q
    # !pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & !pixel_8_.Q
    # !pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & !pixel_9_.Q
    # vState_0_.Q & !pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q
       & pixel_4_.Q
    # !pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & !line_0_.Q & line_1_.Q & !line_2_.Q & !line_3_.Q & !line_4_.Q
       & !line_5_.Q & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q ; (7 pterms, 21 signals)
N_38_i.X2 = !pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q ; (1 pterm, 5 signals)

N_91_i = pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_8_.Q & pixel_9_.Q & line_0_.Q & !line_1_.Q & !line_2_.Q
       & !line_3_.Q & !line_4_.Q & line_5_.Q & !line_6_.Q & !line_7_.Q
       & !line_8_.Q & !line_9_.Q
    # pixel_7_.Q & pixel_8_.Q & pixel_9_.Q & line_0_.Q & !line_1_.Q
       & !line_2_.Q & !line_3_.Q & !line_4_.Q & line_5_.Q & !line_6_.Q
       & !line_7_.Q & !line_8_.Q & !line_9_.Q
    # pixel_6_.Q & pixel_8_.Q & pixel_9_.Q & line_0_.Q & !line_1_.Q
       & !line_2_.Q & !line_3_.Q & !line_4_.Q & line_5_.Q & !line_6_.Q
       & !line_7_.Q & !line_8_.Q & !line_9_.Q
    # pixel_5_.Q & pixel_8_.Q & pixel_9_.Q & line_0_.Q & !line_1_.Q
       & !line_2_.Q & !line_3_.Q & !line_4_.Q & line_5_.Q & !line_6_.Q
       & !line_7_.Q & !line_8_.Q & !line_9_.Q ; (4 pterms, 20 signals)

blue_0_.D = hState_1_.Q & !hState_0_.Q ; (1 pterm, 2 signals)
blue_0_.C = vgaClock ; (1 pterm, 1 signal)
blue_0_.CE = vState_1_.Q & !vState_0_.Q ; (1 pterm, 2 signals)
blue_0_.AR = !reset_n ; (1 pterm, 1 signal)

blue_1_ = 0 ; (0 pterm, 0 signal)

green_0_ = 0 ; (0 pterm, 0 signal)

green_1_ = 0 ; (0 pterm, 0 signal)

hState_0_.T.X1 = hState_1_.Q & vState_1_.Q & !hState_0_.Q & !vState_0_.Q
       & pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_5_.Q & pixel_6_.Q & pixel_7_.Q & !pixel_8_.Q & pixel_9_.Q
       & !G_208 & N_26_i & !N_38_i
    # hState_1_.Q & vState_1_.Q & !hState_0_.Q & !vState_0_.Q & !pixel_5_.Q
       & !pixel_6_.Q & !pixel_7_.Q & pixel_8_.Q & pixel_9_.Q & !G_208 & N_26_i
       & !N_38_i
    # !hState_1_.Q & vState_1_.Q & hState_0_.Q & !vState_0_.Q & pixel_8_.Q
       & pixel_9_.Q & !G_208 & !G_212 & G_214 & N_26_i & !N_32_i
    # !hState_1_.Q & vState_1_.Q & !hState_0_.Q & !vState_0_.Q & pixel_6_.Q
       & pixel_8_.Q & pixel_9_.Q & G_208 & !G_214 & N_26_i & !N_32_i
    # !hState_1_.Q & vState_1_.Q & !hState_0_.Q & !vState_0_.Q & pixel_6_.Q
       & G_208 & !G_214 & N_26_i & N_32_i
    # !hState_1_.Q & vState_1_.Q & hState_0_.Q & !vState_0_.Q & !G_208
       & !G_212 & G_214 & N_26_i & N_32_i
    # !vState_1_.Q & hState_0_.Q & vState_0_.Q & N_91_i
    # hState_1_.Q & vState_1_.Q & hState_0_.Q & N_38_i ; (8 pterms, 21 signals)
hState_0_.T.X2 = !hState_1_.Q & vState_1_.Q & hState_0_.Q & !vState_0_.Q
       & !pixel_5_.Q & !pixel_6_.Q & !pixel_7_.Q & pixel_8_.Q & pixel_9_.Q
       & !G_208 & !G_212 & G_214 & N_26_i & !N_32_i ; (1 pterm, 14 signals)
hState_0_.C = vgaClock ; (1 pterm, 1 signal)
hState_0_.CE = !( vState_1_.Q & vState_0_.Q ) ; (1 pterm, 2 signals)
hState_0_.AR = !reset_n ; (1 pterm, 1 signal)

hState_1_.D = vState_1_.Q & hState_0_.Q & !vState_0_.Q & pixel_7_.Q
       & pixel_8_.Q & pixel_9_.Q & !G_208 & !G_212 & G_214 & N_26_i
    # vState_1_.Q & hState_0_.Q & !vState_0_.Q & pixel_6_.Q & pixel_8_.Q
       & pixel_9_.Q & !G_208 & !G_212 & G_214 & N_26_i
    # vState_1_.Q & hState_0_.Q & !vState_0_.Q & pixel_5_.Q & pixel_8_.Q
       & pixel_9_.Q & !G_208 & !G_212 & G_214 & N_26_i
    # vState_1_.Q & hState_0_.Q & !vState_0_.Q & !G_208 & !G_212 & G_214
       & N_26_i & N_32_i
    # hState_1_.Q & !vState_1_.Q & !N_91_i
    # hState_1_.Q & vState_1_.Q & !hState_0_.Q
    # hState_1_.Q & !vState_1_.Q & !vState_0_.Q
    # hState_1_.Q & vState_1_.Q & !N_38_i ; (8 pterms, 16 signals)
hState_1_.C = vgaClock ; (1 pterm, 1 signal)
hState_1_.CE = !( vState_1_.Q & vState_0_.Q ) ; (1 pterm, 2 signals)
hState_1_.AR = !reset_n ; (1 pterm, 1 signal)

hsync.D = !( !hState_1_.Q & vState_1_.Q & !hState_0_.Q & !vState_0_.Q ) ; (1 pterm, 4 signals)
hsync.C = vgaClock ; (1 pterm, 1 signal)
hsync.AP = !reset_n ; (1 pterm, 1 signal)

line11 = !line_3_.Q & !line_4_.Q & !line_5_.Q & !line_6_.Q & !line_7_.Q
       & !line_8_.Q
    # !line_2_.Q & !line_4_.Q & !line_5_.Q & !line_6_.Q & !line_7_.Q
       & !line_8_.Q
    # !line_9_.Q ; (3 pterms, 8 signals)

line_0_.D = !line_0_.Q & !line_3_.Q & !line_4_.Q & !line_5_.Q & !line_6_.Q
       & !line_7_.Q & !line_8_.Q & !pixel14_i_0_i
    # !line_0_.Q & !line_2_.Q & !line_4_.Q & !line_5_.Q & !line_6_.Q
       & !line_7_.Q & !line_8_.Q & !pixel14_i_0_i
    # line_0_.Q & pixel14_i_0_i
    # !line_0_.Q & !line_9_.Q & !pixel14_i_0_i ; (4 pterms, 10 signals)
line_0_.C = vgaClock ; (1 pterm, 1 signal)
line_0_.AR = !reset_n ; (1 pterm, 1 signal)

line_1_.D = line_0_.Q & !line_1_.Q & line11 & !pixel14_i_0_i
    # !line_0_.Q & line_1_.Q & line11
    # line_1_.Q & pixel14_i_0_i ; (3 pterms, 4 signals)
line_1_.C = vgaClock ; (1 pterm, 1 signal)
line_1_.AR = !reset_n ; (1 pterm, 1 signal)

line_2_.D = line_0_.Q & line_1_.Q & !line_2_.Q & line11 & !pixel14_i_0_i
    # !line_1_.Q & line_2_.Q & line11
    # !line_0_.Q & line_2_.Q & line11
    # line_2_.Q & pixel14_i_0_i ; (4 pterms, 5 signals)
line_2_.C = vgaClock ; (1 pterm, 1 signal)
line_2_.AR = !reset_n ; (1 pterm, 1 signal)

line_3_.D.X1 = line_0_.Q & line_1_.Q & line_2_.Q & !line_9_.Q & !pixel14_i_0_i
    # line_0_.Q & line_1_.Q & line_2_.Q & !line_3_.Q & !line_4_.Q & !line_5_.Q
       & !line_6_.Q & !line_7_.Q & !line_8_.Q & !pixel14_i_0_i
    # line_3_.Q & line_9_.Q & pixel14_i_0_i
    # !line_2_.Q & line_3_.Q & !line_4_.Q & !line_5_.Q & !line_6_.Q
       & !line_7_.Q & !line_8_.Q & line_9_.Q ; (4 pterms, 11 signals)
line_3_.D.X2 = line_3_.Q & !line_9_.Q ; (1 pterm, 2 signals)
line_3_.C = vgaClock ; (1 pterm, 1 signal)
line_3_.AR = !reset_n ; (1 pterm, 1 signal)

line_4_.T = line_0_.Q & line_1_.Q & line_2_.Q & line_3_.Q & !line_9_.Q
       & !pixel14_i_0_i
    # line_4_.Q & line_9_.Q & !pixel14_i_0_i ; (2 pterms, 7 signals)
line_4_.C = vgaClock ; (1 pterm, 1 signal)
line_4_.AR = !reset_n ; (1 pterm, 1 signal)

line_4_9__un1_n = pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q
       & pixel_4_.Q & pixel_8_.Q & pixel_9_.Q & line_0_.Q & line_1_.Q
       & line_2_.Q & line_3_.Q & line_4_.Q & line_5_.Q & line_6_.Q & line_7_.Q
       & line_8_.Q & !line_9_.Q
    # pixel_7_.Q & pixel_8_.Q & pixel_9_.Q & line_0_.Q & line_1_.Q & line_2_.Q
       & line_3_.Q & line_4_.Q & line_5_.Q & line_6_.Q & line_7_.Q & line_8_.Q
       & !line_9_.Q
    # pixel_6_.Q & pixel_8_.Q & pixel_9_.Q & line_0_.Q & line_1_.Q & line_2_.Q
       & line_3_.Q & line_4_.Q & line_5_.Q & line_6_.Q & line_7_.Q & line_8_.Q
       & !line_9_.Q
    # pixel_5_.Q & pixel_8_.Q & pixel_9_.Q & line_0_.Q & line_1_.Q & line_2_.Q
       & line_3_.Q & line_4_.Q & line_5_.Q & line_6_.Q & line_7_.Q & line_8_.Q
       & !line_9_.Q
    # pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_8_.Q & pixel_9_.Q & !line_3_.Q & !line_4_.Q & !line_5_.Q
       & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q
    # pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_8_.Q & pixel_9_.Q & !line_2_.Q & !line_4_.Q & !line_5_.Q
       & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q
    # pixel_7_.Q & pixel_8_.Q & pixel_9_.Q & !line_3_.Q & !line_4_.Q
       & !line_5_.Q & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q
    # pixel_6_.Q & pixel_8_.Q & pixel_9_.Q & !line_3_.Q & !line_4_.Q
       & !line_5_.Q & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q
    # pixel_5_.Q & pixel_8_.Q & pixel_9_.Q & !line_3_.Q & !line_4_.Q
       & !line_5_.Q & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q
    # pixel_7_.Q & pixel_8_.Q & pixel_9_.Q & !line_2_.Q & !line_4_.Q
       & !line_5_.Q & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q
    # pixel_6_.Q & pixel_8_.Q & pixel_9_.Q & !line_2_.Q & !line_4_.Q
       & !line_5_.Q & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q
    # pixel_5_.Q & pixel_8_.Q & pixel_9_.Q & !line_2_.Q & !line_4_.Q
       & !line_5_.Q & !line_6_.Q & !line_7_.Q & !line_8_.Q & line_9_.Q ; (12 pterms, 20 signals)

line_5_.D = !line_3_.Q & !line_4_.Q & !line_5_.Q & !line_6_.Q & !line_7_.Q
       & !line_8_.Q & N_374 & !pixel14_i_0_i
    # !line_2_.Q & !line_4_.Q & !line_5_.Q & !line_6_.Q & !line_7_.Q
       & !line_8_.Q & N_374 & !pixel14_i_0_i
    # line_5_.Q & !line_9_.Q & !N_374
    # !line_5_.Q & !line_9_.Q & N_374 & !pixel14_i_0_i
    # line_5_.Q & pixel14_i_0_i ; (5 pterms, 10 signals)
line_5_.C = vgaClock ; (1 pterm, 1 signal)
line_5_.AR = !reset_n ; (1 pterm, 1 signal)

line_6_.D = line_5_.Q & !line_6_.Q & !line_9_.Q & N_374 & !pixel14_i_0_i
    # line_6_.Q & !line_9_.Q & !N_374
    # !line_5_.Q & line_6_.Q & !line_9_.Q
    # line_6_.Q & pixel14_i_0_i ; (4 pterms, 5 signals)
line_6_.C = vgaClock ; (1 pterm, 1 signal)
line_6_.AR = !reset_n ; (1 pterm, 1 signal)

line_7_.T = line_0_.Q & line_1_.Q & line_2_.Q & line_3_.Q & line_4_.Q
       & line_5_.Q & line_6_.Q & !line_9_.Q & !pixel14_i_0_i
    # line_7_.Q & line_9_.Q & !pixel14_i_0_i ; (2 pterms, 10 signals)
line_7_.C = vgaClock ; (1 pterm, 1 signal)
line_7_.AR = !reset_n ; (1 pterm, 1 signal)

line_8_.T = line_0_.Q & line_1_.Q & line_2_.Q & line_3_.Q & line_4_.Q
       & line_5_.Q & line_6_.Q & line_7_.Q & !line_9_.Q & !pixel14_i_0_i
    # line_8_.Q & line_9_.Q & !pixel14_i_0_i ; (2 pterms, 11 signals)
line_8_.C = vgaClock ; (1 pterm, 1 signal)
line_8_.AR = !reset_n ; (1 pterm, 1 signal)

line_9_.D = line_4_9__un1_n
    # line_9_.Q & pixel14_i_0_i ; (2 pterms, 3 signals)
line_9_.C = vgaClock ; (1 pterm, 1 signal)
line_9_.AR = !reset_n ; (1 pterm, 1 signal)

pixel14_i_0_i = !( pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q
       & pixel_4_.Q & pixel_8_.Q & pixel_9_.Q
    # pixel_7_.Q & pixel_8_.Q & pixel_9_.Q
    # pixel_6_.Q & pixel_8_.Q & pixel_9_.Q
    # pixel_5_.Q & pixel_8_.Q & pixel_9_.Q ) ; (4 pterms, 10 signals)

pixel_0_.D = !pixel_0_.Q ; (1 pterm, 1 signal)
pixel_0_.C = vgaClock ; (1 pterm, 1 signal)
pixel_0_.AR = !reset_n ; (1 pterm, 1 signal)

pixel_1_.D = pixel_0_.Q & !pixel_1_.Q
    # !pixel_0_.Q & pixel_1_.Q ; (2 pterms, 2 signals)
pixel_1_.C = vgaClock ; (1 pterm, 1 signal)
pixel_1_.AR = !reset_n ; (1 pterm, 1 signal)

pixel_2_.D = pixel_0_.Q & pixel_1_.Q & !pixel_2_.Q
    # !pixel_1_.Q & pixel_2_.Q
    # !pixel_0_.Q & pixel_2_.Q ; (3 pterms, 3 signals)
pixel_2_.C = vgaClock ; (1 pterm, 1 signal)
pixel_2_.AR = !reset_n ; (1 pterm, 1 signal)

pixel_3_.D = pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & !pixel_3_.Q
    # !pixel_2_.Q & pixel_3_.Q
    # !pixel_1_.Q & pixel_3_.Q
    # !pixel_0_.Q & pixel_3_.Q ; (4 pterms, 4 signals)
pixel_3_.C = vgaClock ; (1 pterm, 1 signal)
pixel_3_.AR = !reset_n ; (1 pterm, 1 signal)

pixel_4_.D.X1 = pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q ; (1 pterm, 4 signals)
pixel_4_.D.X2 = pixel_4_.Q ; (1 pterm, 1 signal)
pixel_4_.C = vgaClock ; (1 pterm, 1 signal)
pixel_4_.AR = !reset_n ; (1 pterm, 1 signal)

pixel_5_.T = pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel14_i_0_i
    # pixel_5_.Q & !pixel14_i_0_i ; (2 pterms, 7 signals)
pixel_5_.C = vgaClock ; (1 pterm, 1 signal)
pixel_5_.AR = !reset_n ; (1 pterm, 1 signal)

pixel_6_.T = pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_5_.Q ; (1 pterm, 6 signals)
pixel_6_.C = vgaClock ; (1 pterm, 1 signal)
pixel_6_.AR = !reset_n ; (1 pterm, 1 signal)

pixel_7_.T = pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_5_.Q & pixel_6_.Q ; (1 pterm, 7 signals)
pixel_7_.C = vgaClock ; (1 pterm, 1 signal)
pixel_7_.AR = !reset_n ; (1 pterm, 1 signal)

pixel_8_.T = pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_5_.Q & pixel_6_.Q & pixel_7_.Q & pixel14_i_0_i
    # pixel_8_.Q & !pixel14_i_0_i ; (2 pterms, 10 signals)
pixel_8_.C = vgaClock ; (1 pterm, 1 signal)
pixel_8_.AR = !reset_n ; (1 pterm, 1 signal)

pixel_9_.T = pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q & pixel_4_.Q
       & pixel_5_.Q & pixel_6_.Q & pixel_7_.Q & pixel_8_.Q & pixel14_i_0_i
    # pixel_9_.Q & !pixel14_i_0_i ; (2 pterms, 11 signals)
pixel_9_.C = vgaClock ; (1 pterm, 1 signal)
pixel_9_.AR = !reset_n ; (1 pterm, 1 signal)

red_0_.D = hState_1_.Q & !hState_0_.Q ; (1 pterm, 2 signals)
red_0_.C = vgaClock ; (1 pterm, 1 signal)
red_0_.CE = vState_1_.Q & !vState_0_.Q ; (1 pterm, 2 signals)
red_0_.AR = !reset_n ; (1 pterm, 1 signal)

red_1_ = 0 ; (0 pterm, 0 signal)

vState_0_.D = vState_1_.Q & pixel_0_.Q & pixel_1_.Q & pixel_2_.Q & pixel_3_.Q
       & pixel_4_.Q & pixel_5_.Q & N_37_7_0 & pixel_6_.Q & pixel_7_.Q
       & !pixel_8_.Q & pixel_9_.Q & G_208 & N_26_i
    # vState_1_.Q & !pixel_5_.Q & N_37_7_0 & !pixel_6_.Q & !pixel_7_.Q
       & pixel_8_.Q & pixel_9_.Q & G_208 & N_26_i
    # vState_1_.Q & vState_0_.Q & line_0_.Q & line_1_.Q & line_2_.Q
    # vState_1_.Q & vState_0_.Q & !line_1_.Q & !line_2_.Q
    # vState_1_.Q & vState_0_.Q & !line_0_.Q & !line_2_.Q
    # vState_1_.Q & vState_0_.Q & !line11
    # vState_1_.Q & vState_0_.Q & !line_4_9__un1_n
    # vState_1_.Q & vState_0_.Q & !line_3_.Q
    # vState_1_.Q & vState_0_.Q & !pixel_9_.Q
    # vState_1_.Q & vState_0_.Q & !pixel_8_.Q
    # !vstate_1_ns_0_1_0__n
    # vState_1_.Q & vState_0_.Q & pixel14_i_0_i ; (12 pterms, 23 signals)
vState_0_.C = vgaClock ; (1 pterm, 1 signal)
vState_0_.AR = !reset_n ; (1 pterm, 1 signal)

vState_1_.D = !( vState_0_.Q & pixel_8_.Q & pixel_9_.Q & line_0_.Q & line_1_.Q
       & !line_2_.Q & line_3_.Q & line_4_9__un1_n & line11 & !pixel14_i_0_i
    # vState_0_.Q & pixel_8_.Q & pixel_9_.Q & !line_1_.Q & line_2_.Q
       & line_3_.Q & line_4_9__un1_n & line11 & !pixel14_i_0_i
    # vState_0_.Q & pixel_8_.Q & pixel_9_.Q & !line_0_.Q & line_2_.Q
       & line_3_.Q & line_4_9__un1_n & line11 & !pixel14_i_0_i
    # !vState_1_.Q & !vState_0_.Q
    # !vState_1_.Q & !N_91_i ) ; (5 pterms, 12 signals)
vState_1_.C = vgaClock ; (1 pterm, 1 signal)
vState_1_.AR = !reset_n ; (1 pterm, 1 signal)

vstate_1_ns_0_1_0__n = !( !vState_1_.Q & pixel_0_.Q & pixel_1_.Q & pixel_2_.Q
       & pixel_3_.Q & pixel_4_.Q & pixel_8_.Q & pixel_9_.Q & !line_0_.Q
       & !line_1_.Q & !line_2_.Q & !line_3_.Q & !line_4_.Q & !line_5_.Q
       & !line_6_.Q & !line_7_.Q & !line_8_.Q & !line_9_.Q
    # !vState_1_.Q & pixel_7_.Q & pixel_8_.Q & pixel_9_.Q & !line_0_.Q
       & !line_1_.Q & !line_2_.Q & !line_3_.Q & !line_4_.Q & !line_5_.Q
       & !line_6_.Q & !line_7_.Q & !line_8_.Q & !line_9_.Q
    # !vState_1_.Q & pixel_6_.Q & pixel_8_.Q & pixel_9_.Q & !line_0_.Q
       & !line_1_.Q & !line_2_.Q & !line_3_.Q & !line_4_.Q & !line_5_.Q
       & !line_6_.Q & !line_7_.Q & !line_8_.Q & !line_9_.Q
    # !vState_1_.Q & pixel_5_.Q & pixel_8_.Q & pixel_9_.Q & !line_0_.Q
       & !line_1_.Q & !line_2_.Q & !line_3_.Q & !line_4_.Q & !line_5_.Q
       & !line_6_.Q & !line_7_.Q & !line_8_.Q & !line_9_.Q
    # !vState_1_.Q & vState_0_.Q & !pixel_4_.Q & !pixel_5_.Q & !pixel_6_.Q
       & !pixel_7_.Q
    # !vState_1_.Q & vState_0_.Q & !pixel_3_.Q & !pixel_5_.Q & !pixel_6_.Q
       & !pixel_7_.Q
    # !vState_1_.Q & vState_0_.Q & !pixel_2_.Q & !pixel_5_.Q & !pixel_6_.Q
       & !pixel_7_.Q
    # !vState_1_.Q & vState_0_.Q & !pixel_1_.Q & !pixel_5_.Q & !pixel_6_.Q
       & !pixel_7_.Q
    # !vState_1_.Q & vState_0_.Q & !pixel_0_.Q & !pixel_5_.Q & !pixel_6_.Q
       & !pixel_7_.Q
    # !vState_1_.Q & vState_0_.Q & line_9_.Q
    # !vState_1_.Q & vState_0_.Q & line_8_.Q
    # !vState_1_.Q & vState_0_.Q & line_7_.Q
    # !vState_1_.Q & vState_0_.Q & line_6_.Q
    # !vState_1_.Q & vState_0_.Q & line_4_.Q
    # !vState_1_.Q & vState_0_.Q & line_3_.Q
    # !vState_1_.Q & vState_0_.Q & line_2_.Q
    # !vState_1_.Q & vState_0_.Q & line_1_.Q
    # !vState_1_.Q & vState_0_.Q & !pixel_9_.Q
    # !vState_1_.Q & vState_0_.Q & !pixel_8_.Q
    # !vState_1_.Q & vState_0_.Q & !line_5_.Q
    # !vState_1_.Q & vState_0_.Q & !line_0_.Q ) ; (21 pterms, 22 signals)

vsync.D = !( !vState_1_.Q & !vState_0_.Q ) ; (1 pterm, 2 signals)
vsync.C = vgaClock ; (1 pterm, 1 signal)
vsync.AP = !reset_n ; (1 pterm, 1 signal)




